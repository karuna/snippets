[core]
  editor = vi
  excludesfile = /home/karuna/.gitignore
[giggle]
  main-window-maximized = true
  main-window-geometry = 0x0+0+0
  file-view-hpane-position = 386
  history-view-vpane-position = 312
  file-view-vpane-position = 407
  main-window-view = HistoryView
[alias]
  tadd = add
  tcommit = commit
  trm = rm
  tpush = push
  tremote = remote
  tpull = pull
  tst = status
  trebase = rebase
  tcheckout = checkout
  tbranch = branch
  co = checkout
  ci = commit
  st = status
  br = branch
  hist = log --pretty=format:\"%C(yellow)%h%Creset %ad | %Cgreen%s%Creset%d %Cred[%cn - %ce]%Creset\" --graph --date=iso --decorate
  history = log --pretty=format:\"%C(yellow)%h%Creset %ad | %Cgreen%s%Creset%d %Cred[%cn - %ce]%Creset\" --graph --date=iso --decorate
  type = cat-file -t
  dump = cat-file -p
  meld = !/usr/bin/git-meld.pl
  da = difftool -d
  kompare = difftool -d
  backup = archive --format=zip HEAD
  pr = "!f () {\
      branch_name=$1;\
      template_path=$(git rev-parse --show-toplevel)/PULL_REQUEST_TEMPLATE.md;\
      if [ -z ${branch_name} ]; then\
        branch_name='development';\
      fi;\
      hub browse -- compare/${branch_name}'...'$(git symbolic-ref --short HEAD)'?'expand=1'&'body=$(cat ${template_path} | perl -pe 'encode_utf8' | perl -pe 's/([^ 0-9a-zA-Z])/\"%\".uc(unpack(\"H2\",$1))/eg' | perl -pe 's/ /+/g');\
    };f"
  rebae = rebase
  lol = log
  fixup = "!f() { TARGET=$(git rev-parse "$1"); git commit --fixup=$TARGET ${@:2} && EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"

[user]
  name = Karuna Murti
  email = karuna.murti@gmail.com
[merge]
  tool = kdiff3
[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
[diff]
  tool = kompare
  compactionheuristic = true
[push]
  default = current
[difftool]
  prompt = false
[mergetool]
  prompt = false
#[mergetool "kdiff3"]
#  cmd = kdiff3 $BASE $LOCAL $REMOTE -o $MERGED
#  trustExitCode = false
#  keepBackup = false
[guitool "Rebase onto..."]
  cmd = git rebase $REVISION
  revprompt = yes
[guitool "Rebase/Continue"]
  cmd = git rebase --continue
[guitool "Rebase/Skip"]
  cmd = git rebase --skip
[guitool "Rebase/Abort"]
  cmd = git rebase --abort
[guitool "Pull with Rebase"]
  cmd = git pull --rebase
[cola]
  spellcheck = false
