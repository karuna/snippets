<?xml version="1.0" encoding="UTF-8"?>
<!--

 Author: Paolo Borelli <pborelli@gnome.org>
 Copyright (C) 2006-2007 Paolo Borelli

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Library General Public
 License as published by the Free Software Foundation; either
 version 2 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Library General Public License for more details.

 You should have received a copy of the GNU Library General Public
 License along with this library; if not, write to the
 Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.

-->
<language id="clojure" _name="Clojure" version="2.0" _section="Sources">
  <metadata>
    <property name="mimetypes">text/x-clojure</property>
    <property name="globs">*.clj</property>
    <property name="line-comment-start">;</property>
  </metadata>

  <styles>
    <style id="comment" _name="Comment" map-to="def:comment"/>
    <style id="string" _name="String" map-to="def:string"/>
    <style id="keyword" _name="Keyword" map-to="def:keyword"/>
    <style id="function" _name="Function" map-to="def:function"/>
    <style id="boolean" _name="Boolean" map-to="def:boolean"/>    
    <style id="decimal" _name="Decimal number" map-to="def:decimal"/>
    <style id="bracket" _name="All kinds of brackets" map-to="def:type"/>    
  </styles>

  <definitions>
    <define-regex id="identifier">[_a-zA-Z][_a-zA-Z0-9]*</define-regex>  
    <define-regex id="number">[1-9][0-9]*</define-regex>

    <context id="decimal" style-ref="decimal">
      <match>(?&lt;![\w\.])([1-9][0-9]*|0)[lL]?(?![\w\.])</match>
    </context>
    
    <context id="bracket" style-ref="bracket">
      <match>(\(|\)|\[|\]|\{|\})</match>
    </context>

    <context id="boolean" style-ref="boolean">
      <prefix>(?&lt;![\w\.])</prefix>
      <keyword>false</keyword>
      <keyword>true</keyword>
    </context>
          
    <context id="line-comment" style-ref="comment" end-at-line-end="true" class="comment" class-disabled="no-spell-check">
      <start>;</start>
      <include>
        <context ref="def:in-comment"/>
      </include>
    </context>

    <context id="string" style-ref="string" class="string" class-disabled="no-spell-check">
      <start>"</start>
      <end>"</end>
      <include>
        <context ref="def:escape"/>
      </include>
    </context>

    <context id="keyword" style-ref="keyword">
      <prefix>(?&lt;![\w\d_-])</prefix>
      <suffix>(?![\w\d_-])</suffix>
      <keyword>and</keyword>
      <keyword>begin</keyword>
      <keyword>case</keyword>
      <keyword>cond-expand</keyword>
      <keyword>cond</keyword>
      <keyword>define-accessor</keyword>
      <keyword>define-class</keyword>
      <keyword>defined\?</keyword>
      <keyword>define-generic</keyword>
      <keyword>define</keyword>
      <keyword>define\*</keyword>
      <keyword>define-macro</keyword>
      <keyword>define-method</keyword>
      <keyword>define-module</keyword>
      <keyword>define-private</keyword>
      <keyword>define-public</keyword>
      <keyword>define\*-public</keyword>
      <keyword>define-reader-ctor</keyword>
      <keyword>define-syntax</keyword>
      <keyword>define-syntax-macro</keyword>
      <keyword>defmacro</keyword>
      <keyword>defn</keyword>      
      <keyword>def</keyword>      
      <keyword>defmacro\*</keyword>
      <keyword>defmacro\*-public</keyword>
      <keyword>delay</keyword>
      <keyword>do</keyword>
      <keyword>else</keyword>
      <keyword>fluid-let</keyword>
      <keyword>if</keyword>
      <keyword>fn</keyword>
      <keyword>let</keyword>
      <keyword>let\*</keyword>
      <keyword>letrec</keyword>
      <keyword>reduce</keyword>
      <keyword>letrec-syntax</keyword>
      <keyword>let-syntax</keyword>
      <keyword>or</keyword>
      <keyword>quasiquote</keyword>
      <keyword>quote</keyword>
      <keyword>set\!</keyword>
      <keyword>syntax-rules</keyword>
      <keyword>unquote</keyword>
      <keyword>var</keyword>
      <keyword>loop</keyword>
      <keyword>recur</keyword>
      <keyword>throw</keyword>
      <keyword>try</keyword>
      <keyword>new</keyword>
      <keyword>var</keyword>      
    </context>

    <context id="function" style-ref="function">
      <prefix>(?&lt;![\w\d_-])</prefix>
      <suffix>(?![\w\d_-])</suffix>
      <keyword>abs</keyword>
      <keyword>acos</keyword>
      <keyword>angle</keyword>
      <keyword>append</keyword>
      <keyword>apply</keyword>
      <keyword>asin</keyword>
      <keyword>assoc</keyword>
      <keyword>assq</keyword>
      <keyword>assv</keyword>
      <keyword>atan</keyword>
      <keyword>boolean\?</keyword>
      <keyword>caaar</keyword>
      <keyword>caadr</keyword>
      <keyword>caar</keyword>
      <keyword>cadar</keyword>
      <keyword>caddr</keyword>
      <keyword>cadr</keyword>
      <keyword>call/cc</keyword>
      <keyword>call-with-current-continuation</keyword>
      <keyword>call-with-input-file</keyword>
      <keyword>call-with-output-file</keyword>
      <keyword>call-with-values</keyword>
      <keyword>car</keyword>
      <keyword>catch</keyword>
      <keyword>cdaar</keyword>
      <keyword>cdadr</keyword>
      <keyword>cdar</keyword>
      <keyword>cddar</keyword>
      <keyword>cdddr</keyword>
      <keyword>cddr</keyword>
      <keyword>cdr</keyword>
      <keyword>ceiling</keyword>
      <keyword>char-alphabetic\?</keyword>
      <keyword>char-ci&gt;=\?</keyword>
      <keyword>char-ci&gt;\?</keyword>
      <keyword>char-ci\=\?</keyword>
      <keyword>char-ci&lt;=\?</keyword>
      <keyword>char-ci&lt;\?</keyword>
      <keyword>char-downcase</keyword>
      <keyword>char-&gt;integer</keyword>
      <keyword>char&gt;=\?</keyword>
      <keyword>char&gt;\?</keyword>
      <keyword>char=\?</keyword>
      <keyword>char\?</keyword>
      <keyword>char-lower-case\?</keyword>
      <keyword>char&lt;=\?</keyword>
      <keyword>char&lt;\?</keyword>
      <keyword>char-numeric\?</keyword>
      <keyword>char-ready\?</keyword>
      <keyword>char-upcase</keyword>
      <keyword>char-upper-case\?</keyword>
      <keyword>char-whitespace\?</keyword>
      <keyword>close-input-port</keyword>
      <keyword>close-output-port</keyword>
      <keyword>complex\?</keyword>
      <keyword>cons</keyword>
      <keyword>cos</keyword>
      <keyword>current-input-port</keyword>
      <keyword>current-output-port</keyword>
      <keyword>delete-file</keyword>
      <keyword>display</keyword>
      <keyword>dynamic-wind</keyword>
      <keyword>eof-object\?</keyword>
      <keyword>eq\?</keyword>
      <keyword>equal\?</keyword>
      <keyword>eqv\?</keyword>
      <keyword>eval</keyword>
      <keyword>even\?</keyword>
      <keyword>exact-&gt;inexact</keyword>
      <keyword>exact\?</keyword>
      <keyword>exit</keyword>
      <keyword>exp</keyword>
      <keyword>expt</keyword>
      <keyword>file-exists\?</keyword>
      <keyword>file-or-directory-modify-seconds</keyword>
      <keyword>floor</keyword>
      <keyword>force</keyword>
      <keyword>for-each</keyword>
      <keyword>gcd</keyword>
      <keyword>gensym</keyword>
      <keyword>getenv</keyword>
      <keyword>get-output-string</keyword>
      <keyword>imag-part</keyword>
      <keyword>inexact\?</keyword>
      <keyword>input-port\?</keyword>
      <keyword>integer-&gt;char</keyword>
      <keyword>integer\?</keyword>
      <keyword>lcm</keyword>
      <keyword>length</keyword>
      <keyword>list-&gt;string</keyword>
      <keyword>list-&gt;vector</keyword>
      <keyword>list</keyword>
      <keyword>list\?</keyword>
      <keyword>list-ref</keyword>
      <keyword>list-tail</keyword>
      <keyword>load</keyword>
      <keyword>log</keyword>
      <keyword>magnitude</keyword>
      <keyword>make-polar</keyword>
      <keyword>make-rectangular</keyword>
      <keyword>make-string</keyword>
      <keyword>make-vector</keyword>
      <keyword>map</keyword>
      <keyword>max</keyword>
      <keyword>member</keyword>
      <keyword>memq</keyword>
      <keyword>memv</keyword>
      <keyword>min</keyword>
      <keyword>modulo</keyword>
      <keyword>negative\?</keyword>
      <keyword>newline</keyword>
      <keyword>nil</keyword>
      <keyword>not</keyword>
      <keyword>null\?</keyword>
      <keyword>number-&gt;string</keyword>
      <keyword>number\?</keyword>
      <keyword>odd\?</keyword>
      <keyword>open-input-file</keyword>
      <keyword>open-input-string</keyword>
      <keyword>open-output-file</keyword>
      <keyword>open-output-string</keyword>
      <keyword>output-port\?</keyword>
      <keyword>pair\?</keyword>
      <keyword>peek-char</keyword>
      <keyword>port\?</keyword>
      <keyword>positive\?</keyword>
      <keyword>procedure\?</keyword>
      <keyword>quotient</keyword>
      <keyword>rational\?</keyword>
      <keyword>read-char</keyword>
      <keyword>read</keyword>
      <keyword>read-line</keyword>
      <keyword>real\?</keyword>
      <keyword>real-part</keyword>
      <keyword>remainder</keyword>
      <keyword>reverse</keyword>
      <keyword>reverse\!</keyword>
      <keyword>round\</keyword>
      <keyword>set-car\!</keyword>
      <keyword>set-cdr\!</keyword>
      <keyword>sin</keyword>
      <keyword>sqrt</keyword>
      <keyword>string-append</keyword>
      <keyword>string-ci&gt;=\?</keyword>
      <keyword>string-ci&gt;\?</keyword>
      <keyword>string-ci=\?</keyword>
      <keyword>string-ci&lt;=\?</keyword>
      <keyword>string-ci&lt;\?</keyword>
      <keyword>string-copy</keyword>
      <keyword>string-fill\!</keyword>
      <keyword>string&gt;=\?</keyword>
      <keyword>string&gt;\?</keyword>
      <keyword>string-&gt;list</keyword>
      <keyword>string-&gt;number</keyword>
      <keyword>string-&gt;symbol</keyword>
      <keyword>string</keyword>
      <keyword>string=\?</keyword>
      <keyword>string\?</keyword>
      <keyword>string-length</keyword>
      <keyword>string&lt;=\?</keyword>
      <keyword>string&lt;\?</keyword>
      <keyword>string-ref</keyword>
      <keyword>string-set\!</keyword>
      <keyword>substring</keyword>
      <keyword>symbol-&gt;string</keyword>
      <keyword>symbol\?</keyword>
      <keyword>system</keyword>
      <keyword>tan</keyword>
      <keyword>truncate</keyword>
      <keyword>values</keyword>
      <keyword>vector-fill\!</keyword>
      <keyword>vector-&gt;list</keyword>
      <keyword>vector</keyword>
      <keyword>vector\?</keyword>
      <keyword>vector-length</keyword>
      <keyword>vector-ref</keyword>
      <keyword>vector-set\!</keyword>
      <keyword>with-input-from-file</keyword>
      <keyword>with-output-to-file</keyword>
      <keyword>write-char</keyword>
      <keyword>write</keyword>
      <keyword>zero\?</keyword>
      <keyword>reader</keyword>      
      <keyword>partial</keyword>
      <keyword>comp</keyword>
      <keyword>complemet</keyword>
      <keyword>constantly</keyword>
      <keyword>prn</keyword>
      
      <keyword>accessor</keyword>
      <keyword>aclone</keyword>
      <keyword>add-classpath</keyword>
      <keyword>add-watch</keyword>
      <keyword>agent</keyword>
      <keyword>agent-error</keyword>
      <keyword>agent-errors</keyword>
      <keyword>aget</keyword>
      <keyword>alength</keyword>
      <keyword>alias</keyword>
      <keyword>all-ns</keyword>
      <keyword>alter</keyword>
<!--      <keyword>alter-meta!</keyword>-->
      <keyword>alter-var-root</keyword>
      <keyword>amap</keyword>
      <keyword>ancestors</keyword>
      <keyword>and</keyword>
      <keyword>apply</keyword>
      <keyword>areduce</keyword>
      <keyword>array-map</keyword>
      <keyword>aset</keyword>
      <keyword>aset-boolean</keyword>
      <keyword>aset-byte</keyword>
      <keyword>aset-char</keyword>
      <keyword>aset-double</keyword>
      <keyword>aset-float</keyword>
      <keyword>aset-int</keyword>
      <keyword>aset-long</keyword>
      <keyword>aset-short</keyword>
      <keyword>assert</keyword>
      <keyword>assoc</keyword>
<!--      <keyword>assoc!</keyword>-->
      <keyword>assoc-in</keyword>
      <keyword>associative?</keyword>
      <keyword>atom</keyword>
      <keyword>await</keyword>
      <keyword>await-for</keyword>
      <keyword>bases</keyword>
      <keyword>bean</keyword>
      <keyword>bigdec</keyword>
      <keyword>bigint</keyword>
      <keyword>binding</keyword>
      <keyword>bit-and</keyword>
      <keyword>bit-and-not</keyword>
      <keyword>bit-clear</keyword>
      <keyword>bit-flip</keyword>
      <keyword>bit-not</keyword>
      <keyword>bit-or</keyword>
      <keyword>bit-set</keyword>
      <keyword>bit-shift-left</keyword>
      <keyword>bit-shift-right</keyword>
      <keyword>bit-test</keyword>
      <keyword>bit-xor</keyword>
      <keyword>boolean</keyword>
      <keyword>boolean-array</keyword>
      <keyword>booleans</keyword>
      <keyword>bound-fn</keyword>
      <keyword>bound-fn*</keyword>
<!--      <keyword>bound?</keyword>-->
      <keyword>butlast</keyword>
      <keyword>byte</keyword>
      <keyword>byte-array</keyword>
      <keyword>bytes</keyword>
      <keyword>case</keyword>
      <keyword>cast</keyword>
      <keyword>char</keyword>
      <keyword>char-array</keyword>
      <keyword>char-escape-string</keyword>
      <keyword>char-name-string</keyword>
      <keyword>char?</keyword>
      <keyword>chars</keyword>
      <keyword>class</keyword>
      <keyword>class?</keyword>
      <keyword>clear-agent-errors</keyword>
      <keyword>clojure-version</keyword>
      <keyword>coll?</keyword>
      <keyword>comment</keyword>
      <keyword>commute</keyword>
      <keyword>comp</keyword>
      <keyword>comparator</keyword>
      <keyword>compare</keyword>
<!--      <keyword>compare-and-set!</keyword>-->
      <keyword>compile</keyword>
      <keyword>complement</keyword>
      <keyword>concat</keyword>
      <keyword>cond</keyword>
      <keyword>condp</keyword>
      <keyword>conj</keyword>
<!--      <keyword>conj!</keyword>-->
      <keyword>cons</keyword>
      <keyword>constantly</keyword>
      <keyword>construct-proxy</keyword>
      <keyword>contains?</keyword>
      <keyword>count</keyword>
      <keyword>counted?</keyword>
      <keyword>create-ns</keyword>
      <keyword>create-struct</keyword>
      <keyword>cycle</keyword>
      <keyword>dec</keyword>
      <keyword>decimal?</keyword>
      <keyword>declare</keyword>
      <keyword>definline</keyword>
      <keyword>defmacro</keyword>
      <keyword>defmethod</keyword>
      <keyword>defmulti</keyword>
      <keyword>defn</keyword>
      <keyword>defn-</keyword>
      <keyword>defonce</keyword>
      <keyword>defprotocol</keyword>
      <keyword>defrecord</keyword>
      <keyword>defstruct</keyword>
      <keyword>deftype</keyword>
      <keyword>delay</keyword>
<!--      <keyword>delay?</keyword>-->
      <keyword>deliver</keyword>
      <keyword>denominator</keyword>
      <keyword>deref</keyword>
      <keyword>derive</keyword>
      <keyword>descendants</keyword>
      <keyword>disj</keyword>
<!--      <keyword>disj!</keyword>-->
      <keyword>dissoc</keyword>
<!--      <keyword>dissoc!</keyword>-->
      <keyword>distinct</keyword>
<!--      <keyword>distinct?</keyword>-->
      <keyword>doall</keyword>
      <keyword>doc</keyword>
      <keyword>dorun</keyword>
      <keyword>doseq</keyword>
      <keyword>dosync</keyword>
      <keyword>dotimes</keyword>
      <keyword>doto</keyword>
      <keyword>double</keyword>
      <keyword>double-array</keyword>
      <keyword>doubles</keyword>
      <keyword>drop</keyword>
      <keyword>drop-last</keyword>
      <keyword>drop-while</keyword>
      <keyword>empty</keyword>
<!--      <keyword>empty?</keyword>-->
      <keyword>ensure</keyword>
      <keyword>enumeration-seq</keyword>
      <keyword>error-handler</keyword>
      <keyword>error-mode</keyword>
      <keyword>eval</keyword>
<!--      <keyword>even?</keyword>-->
<!--      <keyword>every?</keyword>-->
      <keyword>extend</keyword>
      <keyword>extend-protocol</keyword>
      <keyword>extend-type</keyword>
      <keyword>extenders</keyword>
<!--      <keyword>extends?</keyword>-->
<!--      <keyword>false?</keyword>-->
      <keyword>ffirst</keyword>
      <keyword>file-seq</keyword>
      <keyword>filter</keyword>
      <keyword>find</keyword>
      <keyword>find-doc</keyword>
      <keyword>find-ns</keyword>
      <keyword>find-var</keyword>
      <keyword>first</keyword>
      <keyword>flatten</keyword>
      <keyword>float</keyword>
      <keyword>float-array</keyword>
<!--      <keyword>float?</keyword>-->
      <keyword>floats</keyword>
      <keyword>flush</keyword>
      <keyword>fn</keyword>
<!--      <keyword>fn?</keyword>-->
      <keyword>fnext</keyword>
      <keyword>fnil</keyword>
      <keyword>for</keyword>
      <keyword>force</keyword>
      <keyword>format</keyword>
      <keyword>frequencies</keyword>
      <keyword>future</keyword>
      <keyword>future-call</keyword>
      <keyword>future-cancel</keyword>
<!--      <keyword>future-cancelled?</keyword>-->
<!--      <keyword>future-done?</keyword>-->
<!--      <keyword>future?</keyword>-->
      <keyword>gen-class</keyword>
      <keyword>gen-interface</keyword>
      <keyword>gensym</keyword>
      <keyword>get</keyword>
      <keyword>get-in</keyword>
      <keyword>get-method</keyword>
      <keyword>get-proxy-class</keyword>
      <keyword>get-thread-bindings</keyword>
      <keyword>get-validator</keyword>
      <keyword>group-by</keyword>
      <keyword>hash</keyword>
      <keyword>hash-map</keyword>
      <keyword>hash-set</keyword>
<!--      <keyword>identical?</keyword>-->
      <keyword>identity</keyword>
      <keyword>if-let</keyword>
      <keyword>if-not</keyword>
<!--      <keyword>ifn?</keyword>-->
      <keyword>import</keyword>
      <keyword>in-ns</keyword>
      <keyword>inc</keyword>
      <keyword>init-proxy</keyword>
      <keyword>instance?</keyword>
      <keyword>int</keyword>
      <keyword>int-array</keyword>
<!--      <keyword>integer?</keyword>-->
      <keyword>interleave</keyword>
      <keyword>intern</keyword>
      <keyword>interpose</keyword>
      <keyword>into</keyword>
      <keyword>into-array</keyword>
      <keyword>ints</keyword>
<!--      <keyword>io!</keyword>-->
<!--      <keyword>isa?</keyword>-->
      <keyword>iterate</keyword>
      <keyword>iterator-seq</keyword>
      <keyword>juxt</keyword>
      <keyword>keep</keyword>
      <keyword>keep-indexed</keyword>
      <keyword>key</keyword>
      <keyword>keys</keyword>
      <keyword>keyword</keyword>
<!--      <keyword>keyword?</keyword>-->
      <keyword>last</keyword>
      <keyword>lazy-cat</keyword>
      <keyword>lazy-seq</keyword>
      <keyword>let</keyword>
      <keyword>letfn</keyword>
      <keyword>line-seq</keyword>
      <keyword>list</keyword>
      <keyword>list*</keyword>
<!--      <keyword>list?</keyword>-->
      <keyword>load</keyword>
      <keyword>load-file</keyword>
      <keyword>load-reader</keyword>
      <keyword>load-string</keyword>
      <keyword>loaded-libs</keyword>
      <keyword>locking</keyword>
      <keyword>long</keyword>
      <keyword>long-array</keyword>
      <keyword>longs</keyword>
      <keyword>loop</keyword>
      <keyword>macroexpand</keyword>
      <keyword>macroexpand-1</keyword>
      <keyword>make-array</keyword>
      <keyword>make-hierarchy</keyword>
      <keyword>map</keyword>
      <keyword>map-indexed</keyword>
      <keyword>map?</keyword>
      <keyword>mapcat</keyword>
      <keyword>max</keyword>
      <keyword>max-key</keyword>
      <keyword>memfn</keyword>
      <keyword>memoize</keyword>
      <keyword>merge</keyword>
      <keyword>merge-with</keyword>
      <keyword>meta</keyword>
      <keyword>methods</keyword>
      <keyword>min</keyword>
      <keyword>min-key</keyword>
      <keyword>mod</keyword>
      <keyword>name</keyword>
      <keyword>namespace</keyword>
      <keyword>namespace-munge</keyword>
<!--      <keyword>neg?</keyword>-->
      <keyword>newline</keyword>
      <keyword>next</keyword>
      <keyword>nfirst</keyword>
<!--      <keyword>nil?</keyword>-->
      <keyword>nnext</keyword>
      <keyword>not</keyword>
<!--      <keyword>not-any?</keyword>-->
<!--      <keyword>not-empty</keyword>-->
<!--      <keyword>not-every?</keyword>-->
      <keyword>not=</keyword>
      <keyword>ns</keyword>
      <keyword>ns-aliases</keyword>
      <keyword>ns-imports</keyword>
      <keyword>ns-interns</keyword>
      <keyword>ns-map</keyword>
      <keyword>ns-name</keyword>
      <keyword>ns-publics</keyword>
      <keyword>ns-refers</keyword>
      <keyword>ns-resolve</keyword>
      <keyword>ns-unalias</keyword>
      <keyword>ns-unmap</keyword>
      <keyword>nth</keyword>
      <keyword>nthnext</keyword>
      <keyword>num</keyword>
<!--      <keyword>number?</keyword>-->
      <keyword>numerator</keyword>
      <keyword>object-array</keyword>
<!--      <keyword>odd?</keyword>-->
      <keyword>or</keyword>
      <keyword>parents</keyword>
      <keyword>partial</keyword>
      <keyword>partition</keyword>
      <keyword>partition-all</keyword>
      <keyword>partition-by</keyword>
      <keyword>pcalls</keyword>
      <keyword>peek</keyword>
<!--      <keyword>persistent!</keyword>-->
      <keyword>pmap</keyword>
      <keyword>pop</keyword>
<!--      <keyword>pop!</keyword>-->
      <keyword>pop-thread-bindings</keyword>
<!--      <keyword>pos?</keyword>-->
      <keyword>pr</keyword>
      <keyword>pr-str</keyword>
      <keyword>prefer-method</keyword>
      <keyword>prefers</keyword>
      <keyword>print</keyword>
      <keyword>print-namespace-doc</keyword>
      <keyword>print-str</keyword>
      <keyword>printf</keyword>
      <keyword>println</keyword>
      <keyword>println-str</keyword>
      <keyword>prn</keyword>
      <keyword>prn-str</keyword>
      <keyword>promise</keyword>
      <keyword>proxy</keyword>
      <keyword>proxy-mappings</keyword>
      <keyword>proxy-super</keyword>
      <keyword>push-thread-bindings</keyword>
      <keyword>pvalues</keyword>
      <keyword>quot</keyword>
      <keyword>rand</keyword>
      <keyword>rand-int</keyword>
      <keyword>rand-nth</keyword>
      <keyword>range</keyword>
<!--      <keyword>ratio?</keyword>-->
      <keyword>rationalize</keyword>
      <keyword>re-find</keyword>
      <keyword>re-groups</keyword>
      <keyword>re-matcher</keyword>
      <keyword>re-matches</keyword>
      <keyword>re-pattern</keyword>
      <keyword>re-seq</keyword>
      <keyword>read</keyword>
      <keyword>read-line</keyword>
      <keyword>read-string</keyword>
      <keyword>reduce</keyword>
      <keyword>reductions</keyword>
      <keyword>ref</keyword>
      <keyword>ref-history-count</keyword>
      <keyword>ref-max-history</keyword>
      <keyword>ref-min-history</keyword>
      <keyword>ref-set</keyword>
      <keyword>refer</keyword>
      <keyword>refer-clojure</keyword>
      <keyword>reify</keyword>
      <keyword>release-pending-sends</keyword>
      <keyword>rem</keyword>
      <keyword>remove</keyword>
      <keyword>remove-all-methods</keyword>
      <keyword>remove-method</keyword>
      <keyword>remove-ns</keyword>
      <keyword>remove-watch</keyword>
      <keyword>repeat</keyword>
      <keyword>repeatedly</keyword>
      <keyword>replace</keyword>
      <keyword>replicate</keyword>
      <keyword>require</keyword>
<!--      <keyword>reset!</keyword>-->
<!--      <keyword>reset-meta!</keyword>-->
      <keyword>resolve</keyword>
      <keyword>rest</keyword>
      <keyword>restart-agent</keyword>
      <keyword>resultset-seq</keyword>
      <keyword>reverse</keyword>
<!--      <keyword>reversible?</keyword>-->
      <keyword>rseq</keyword>
      <keyword>rsubseq</keyword>
<!--      <keyword>satisfies?</keyword>-->
      <keyword>second</keyword>
      <keyword>select-keys</keyword>
      <keyword>send</keyword>
      <keyword>send-off</keyword>
      <keyword>seq</keyword>
<!--      <keyword>seq?</keyword>-->
      <keyword>seque</keyword>
      <keyword>sequence</keyword>
<!--      <keyword>sequential?</keyword>-->
      <keyword>set</keyword>
<!--      <keyword>set-error-handler!</keyword>-->
<!--      <keyword>set-error-mode!</keyword>-->
<!--      <keyword>set-validator!</keyword>-->
<!--      <keyword>set?</keyword>-->
      <keyword>short</keyword>
      <keyword>short-array</keyword>
      <keyword>shorts</keyword>
      <keyword>shuffle</keyword>
      <keyword>shutdown-agents</keyword>
      <keyword>slurp</keyword>
      <keyword>some</keyword>
      <keyword>sort</keyword>
      <keyword>sort-by</keyword>
      <keyword>sorted-map</keyword>
      <keyword>sorted-map-by</keyword>
      <keyword>sorted-set</keyword>
      <keyword>sorted-set-by</keyword>
<!--      <keyword>sorted?</keyword>-->
      <keyword>special-form-anchor</keyword>
<!--      <keyword>special-symbol?</keyword>-->
      <keyword>spit</keyword>
      <keyword>split-at</keyword>
      <keyword>split-with</keyword>
      <keyword>str</keyword>
<!--      <keyword>string?</keyword>-->
      <keyword>struct</keyword>
      <keyword>struct-map</keyword>
      <keyword>subs</keyword>
      <keyword>subseq</keyword>
      <keyword>subvec</keyword>
      <keyword>supers</keyword>
<!--      <keyword>swap!</keyword>-->
      <keyword>symbol</keyword>
<!--      <keyword>symbol?</keyword>-->
      <keyword>sync</keyword>
      <keyword>syntax-symbol-anchor</keyword>
      <keyword>take</keyword>
      <keyword>take-last</keyword>
      <keyword>take-nth</keyword>
      <keyword>take-while</keyword>
      <keyword>test</keyword>
      <keyword>the-ns</keyword>
<!--      <keyword>thread-bound?</keyword>-->
      <keyword>time</keyword>
      <keyword>to-array</keyword>
      <keyword>to-array-2d</keyword>
      <keyword>trampoline</keyword>
      <keyword>transient</keyword>
      <keyword>tree-seq</keyword>
<!--      <keyword>true?</keyword>-->
      <keyword>type</keyword>
      <keyword>unchecked-add</keyword>
      <keyword>unchecked-dec</keyword>
      <keyword>unchecked-divide</keyword>
      <keyword>unchecked-inc</keyword>
      <keyword>unchecked-multiply</keyword>
      <keyword>unchecked-negate</keyword>
      <keyword>unchecked-remainder</keyword>
      <keyword>unchecked-subtract</keyword>
      <keyword>underive</keyword>
      <keyword>update-in</keyword>
      <keyword>update-proxy</keyword>
      <keyword>use</keyword>
      <keyword>val</keyword>
      <keyword>vals</keyword>
      <keyword>var-get</keyword>
      <keyword>var-set</keyword>
<!--      <keyword>var?</keyword>-->
      <keyword>vary-meta</keyword>
      <keyword>vec</keyword>
      <keyword>vector</keyword>
      <keyword>vector-of</keyword>
<!--      <keyword>vector?</keyword>-->
      <keyword>when</keyword>
      <keyword>when-first</keyword>
      <keyword>when-let</keyword>
      <keyword>when-not</keyword>
      <keyword>while</keyword>
      <keyword>with-bindings</keyword>
      <keyword>with-bindings*</keyword>
      <keyword>with-in-str</keyword>
      <keyword>with-local-vars</keyword>
      <keyword>with-meta</keyword>
      <keyword>with-open</keyword>
      <keyword>with-out-str</keyword>
      <keyword>with-precision</keyword>
      <keyword>xml-seq</keyword>
<!--      <keyword>zero?</keyword>-->
      <keyword>zipmap</keyword>

      
    </context>


    <context id="clojure" class="no-spell-check">
      <include>
        <context ref="line-comment"/>
        <context ref="string"/>
        <context ref="keyword"/>
        <context ref="function"/>
        <context ref="bracket"/>        
        <context ref="boolean"/>
        <context ref="decimal"/>
      </include>
    </context>

  </definitions>
</language>
